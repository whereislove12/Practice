package com.Practice.mydemmo.TrainingCouser.EmploymentClass.FirstStage.day9_Multithreading;

/**
 * 线程和进程
 * 进程:
 * 是指一个内存中运行的应用程序，每个进程都有一个独立的内存空间，一个应用程序可以同时运行多个进程；
 * 进程也是程序的一次执行过程，是系统运行程序的基本单位；系统运行一个程序即是一个进程从创建、运行到消亡的过程。
 * 线程:
 * 是进程中的一个执行单元，负责当前进程中程序的执行，一个进程中至少有一个线程。
 * 一个进程中是可以有多个线程的，这个应用程序也可以称之为多线程程序。
 * ******************************************************************************************************
 * 进程与线程的区别:
 * 进程：有独立的内存空间，进程中的数据存放空间（堆空间和栈空间）是独立的，至少有一个线程。
 * 线程：堆空间是共享的，栈空间是独立的，线程消耗的资源比进程小的多。
 * *********************************************************************************************************
 * 1. 因为一个进程中的多个线程是并发运行的，那么从微观角度看也是有先后顺序的，
 * 哪个线程执行完全取决于 CPU 的调度，程序员是干涉不了的。而这也就造成的多线程的随机性。
 * 2. Java 程序的进程里面至少包含两个线程，主进程也就是 main()方法线程，另外一个是垃圾回收机制线程。
 * 每当使用 java 命令执行一个类时，实际上都会启动一个 JVM，每一个 JVM 实际上就是在操作系统中启动了一个线程，
 * java 本身具备了垃圾的收集机制，所以在 Java 运行时至少会启动两个线程。
 * 3. 由于创建一个线程的开销比创建一个进程的开销小的多，那么我们在开发多任务运行的时候，通常考虑创建多线程， 而不是创建多进程。
 */
public class ProgressThread {
}
